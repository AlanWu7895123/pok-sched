stages:
  - style
  - test

# Check that the style of source files respects
# the coding convention.
check_style:
  stage: style
  image: ubuntu:20.04
  before_script:
    - apt -y update
    - apt -y install clang-format git
  script:
    - misc/fix-style --check

# Check that headers are up-to-date.
check_headers:
  stage: style
  image: debian:stable
  before_script:
    - apt -y update
    - apt -y install python git
  script:
    - misc/update-headers --check

# This should be a proper test pass, but right now we
# only check that we can compile without error.
compile:
  stage: test
  image: debian:stable
  before_script:
    - apt -y update
    - apt -y install build-essential mtools perl libxml-libxml-perl libxml-simple-perl libfile-copy-recursive-perl bc
  script:
    - make configure
    - (cd examples/mutexes && make CC="gcc -march=pentium -Wall -Wextra -Werror")
    - (cd examples/semaphores && make CC="gcc -march=pentium -Wall -Wextra -Werror")

# Run tests for utilities
test_utils:
  stage: test
  image: debian:stable
  before_script:
    - apt -y update
    - apt -y install python3 python3-yaml
  script:
    - python3 misc/gen_deployment --test
